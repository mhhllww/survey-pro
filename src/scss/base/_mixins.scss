@use 'variables' as var;

@mixin container {
  @include center;

  margin-inline: auto;

  padding-left: map-get(var.$padding-breakpoints, xs);
  padding-right: map-get(var.$padding-breakpoints, xs);

  @each $key, $value in var.$padding-breakpoints {
    @if $key != xs {
      @media (min-width: map-get(var.$screens, $key)) {
        max-width: map-get(var.$screens, $key);
        padding-left: $value;
        padding-right: $value;
      }
    }
  }
}

@mixin center {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

@mixin space-x($space) {
  > * + * {
    margin-left: $space;
  }
}

@mixin space-y($space) {
  > * + * {
    margin-top: $space;
  }
}

@mixin ring(
  $ring-size,
  $ring-color,
  $offset-size: 0,
  $offset-color: transparent,
  $inset: false
) {
  $r: if(unit($ring-size) == "", $ring-size * 1px, $ring-size);
  $o: if(unit($offset-size) == "", $offset-size * 1px, $offset-size);
  $in: if($inset, inset, null);

  box-shadow:
          #{$in} 0 0 0 $o $offset-color,
          #{$in} 0 0 0 ($o + $r) $ring-color;
}